üîç What is the Sliding Window Technique?
    - The Sliding Window is a commonly used algorithmic technique for problems that involve arrays or lists.
    - It is especially useful for solving problems related to subarrays, substrings, or sequences within a given array or string.
    - Instead of using nested loops, which results in higher time complexity (O(n¬≤)), sliding window helps optimize it to O(n) by maintaining a window that slides through the data.

üß† When to Use Sliding Window?
    Use it when:
    - You're dealing with contiguous subarrays or substrings
    - You're calculating something over a window of size k, like sum, max, or average
    - You want to reduce time complexity from brute-force methods

üîß Types of Sliding Window
    1.Fixed-size window (e.g., window size = k)
       - Example: Find max sum of any subarray of size k.
       - Window size stays constant, you just move it one step at a time.

    2.Variable-size window
       - Example: Longest substring without repeating characters.
       - The window expands and contracts based on a condition.

üßÆ How It Works (Fixed-size Window Example):
    Step-by-step:
    - Let's say array = [1, 3, 2, 5, 1, 1, 2, 3] and window size = 3
    - Initial Window (0-2): Sum = 1 + 3 + 2 = 6
    - Slide window to right (1-3): Remove 1, Add 5 ‚Üí Sum = 6 - 1 + 5 = 10
    - Continue until end
    - You don't recalculate everything, just subtract the element leaving the window and add the new one entering it.

‚è± Time and Space Complexity
    Operation     Complexity
      Time	        O(n)
     Space	        O(1) (if only sum is tracked) or O(k) (if storing window values)

